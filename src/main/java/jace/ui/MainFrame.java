/*
 * Copyright (C) 2012 Brendan Robert (BLuRry) brendan.robert@gmail.com.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package jace.ui;

import java.awt.Canvas;
import java.awt.Component;
import java.util.List;
import java.util.Set;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 * The old user interface.  It is not capable of displaying on-screen indicators.  Much of its logic was pulled out into the AbstractEmulatorFrame class.
 * @author Administrator
 */
public class MainFrame extends AbstractEmulatorFrame {

    @Override
    public DebuggerPanel getDebuggerPanel() {
        return debuggerPanel;
    }

    public MainFrame(JPanel debugger, JCheckBox enableDebug, JCheckBox enableTrace, JLabel labelA, JLabel labelBreakPoints, JLabel labelINST, JLabel labelPC, JLabel labelPC1, JLabel labelSP, JLabel labelWatches, JLabel labelX, JLabel labelY, Canvas screen, JButton stepForwardButton, JTextField textBP1, JTextField textBP2, JTextField textBP3, JTextField textBP4, JTextField textW1, JTextField textW2, JTextField textW3, JTextField textW4, JLabel valueA, JLabel valueINST, JLabel valuePC, JLabel valuePC2, JLabel valueSP, JLabel valueW1, JLabel valueW2, JLabel valueW3, JLabel valueW4, JLabel valueX, JLabel valueY) {
    }

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        reconfigure();
        screen.setFocusTraversalKeysEnabled(false);
        resizeVideo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        debuggerPanel = new jace.ui.DebuggerPanel();
        screen = new ScreenCanvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(560, 384));

        screen.setPreferredSize(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(screen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(debuggerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(screen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(debuggerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public jace.ui.DebuggerPanel debuggerPanel;
    public java.awt.Canvas screen;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getShortName() {
        return "frame";
    }

    @Override
    public Component getScreen() {
        return screen;
    }

    @Override
    public void doRedrawIndicators(Set<ImageIcon> indicators) {
    }

    @Override
    public void repaintIndicators() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    protected void displayModalDialog(String name, JPanel ui, List<String> ancestors) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    protected void disposeModalDialog(String name) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    protected void hideModalDialog(String name) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
